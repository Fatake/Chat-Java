package cliente;

import Cliente;
import MD5;
import Mezclador;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Base64;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pace_
 */
public class ClienteGUI extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ClienteGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonAgregarAmigos = new javax.swing.JButton();
        labelListaAmigos = new javax.swing.JLabel();
        botonCerrarSesion = new javax.swing.JButton();
        botonIniciarSesion = new javax.swing.JButton();
        scrolPanelAmigos = new javax.swing.JScrollPane();
        panelAmigos = new javax.swing.JPanel();
        botonPrueba = new javax.swing.JButton();
        textoNombreUsuario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Cliente");

        botonAgregarAmigos.setText("Agregar Amigos");
        botonAgregarAmigos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonAgregarAmigosMouseClicked(evt);
            }
        });

        labelListaAmigos.setText("Lista de Amigos de");

        botonCerrarSesion.setText("Cerra Sesion");
        botonCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarSesionActionPerformed(evt);
            }
        });

        botonIniciarSesion.setText("Iniciar Sesion");
        botonIniciarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonIniciarSesionMouseClicked(evt);
            }
        });
        botonIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIniciarSesionActionPerformed(evt);
            }
        });

        scrolPanelAmigos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scrolPanelAmigosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelAmigosLayout = new javax.swing.GroupLayout(panelAmigos);
        panelAmigos.setLayout(panelAmigosLayout);
        panelAmigosLayout.setHorizontalGroup(
            panelAmigosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
        );
        panelAmigosLayout.setVerticalGroup(
            panelAmigosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 266, Short.MAX_VALUE)
        );

        scrolPanelAmigos.setViewportView(panelAmigos);

        botonPrueba.setText("Prueba");
        botonPrueba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonPruebaMouseClicked(evt);
            }
        });

        textoNombreUsuario.setText("inicieSesion");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrolPanelAmigos)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonAgregarAmigos)
                        .addGap(30, 30, 30)
                        .addComponent(botonPrueba))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonIniciarSesion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonCerrarSesion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelListaAmigos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoNombreUsuario)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCerrarSesion)
                    .addComponent(botonIniciarSesion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelListaAmigos, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoNombreUsuario))
                .addGap(18, 18, 18)
                .addComponent(scrolPanelAmigos, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregarAmigos)
                    .addComponent(botonPrueba))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarSesionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonCerrarSesionActionPerformed

    private void botonIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIniciarSesionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonIniciarSesionActionPerformed

    private void scrolPanelAmigosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrolPanelAmigosMouseClicked
        
    }//GEN-LAST:event_scrolPanelAmigosMouseClicked

    private void botonPruebaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPruebaMouseClicked
        Conversacion nuevo = new Conversacion();
        nuevo.setVisible(true);
    }//GEN-LAST:event_botonPruebaMouseClicked

    private void botonAgregarAmigosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarAmigosMouseClicked
        ItemAmigo nuevo = new ItemAmigo();
        panelAmigos.add(nuevo);
        scrolPanelAmigos.updateUI();
    }//GEN-LAST:event_botonAgregarAmigosMouseClicked

    private void botonIniciarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonIniciarSesionMouseClicked
        Loggin logeo = new Loggin();
        logeo.setVisible(true);
    }//GEN-LAST:event_botonIniciarSesionMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteGUI().setVisible(true);
            }
        });
        //se obtiene el servidor
        String servidor = args[0];
        //se obtiene el puerto de conexion
        int puerto = Integer.parseInt(args[1]);
        String mensajeAleatorio;
        Mezclador mes = new Mezclador();
        MD5 gen = new MD5();
        String textoMezclado = "";

        System.out.println("Conectando a: "+servidor+"\nPuerto: "+puerto+"\n");
        
        try{
            Usuario user = new Usuario("Nombre","Usuario");
            //Abre el socket
            Socket socket = new Socket(servidor,puerto);

            //Habilita Escuchadores de entrada y salida
            BufferedReader entrada = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter salida = new PrintWriter( new OutputStreamWriter(socket.getOutputStream() ),true );

            //Envia Usuario
            salida.println(encriptar("us,"+user.getName()));

            //Recibe mensaje Aleatorio
            mensajeAleatorio = desencriptar(entrada.readLine());
            String str[] = mensajeAleatorio.split(",");
            if (str[0].equals("un")) {
                    System.out.println("Usuario no registrado u.u");
                    socket.close();
                    System.exit(1);
            }
            mensajeAleatorio = str[1];

            //Mezcla el mensaje
            textoMezclado = mes.mezcla(mensajeAleatorio, user.getPass());

            //Genera MD5 y envia
            String md5cli = gen.getMD5(textoMezclado);
            salida.println(encriptar("md,"+md5cli));

            String confirma = desencriptar(entrada.readLine());
            if (confirma.equals("cn")) {
                    System.out.println("Conectado con Exito n.n");
            }else{
                    System.out.println("Contraseña Incorrecta");
            }

            //Envia mensaje de Salida
            salida.println(encriptar("fn"));

            //Termina coneccion
            socket.close();
        }
        catch(UnknownHostException e){
                e.printStackTrace();
        }
        catch(IOException e){
                e.printStackTrace();
        }
    }
    
    private static String encriptar(String s) throws UnsupportedEncodingException{
        return Base64.getEncoder().encodeToString(s.getBytes("utf-8"));
    }

    private static String desencriptar(String s) throws UnsupportedEncodingException{
        byte[] decode = Base64.getDecoder().decode(s.getBytes());
        return new String(decode, "utf-8");
    }
    private Usuario usuario;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarAmigos;
    private javax.swing.JButton botonCerrarSesion;
    private javax.swing.JButton botonIniciarSesion;
    private javax.swing.JButton botonPrueba;
    private javax.swing.JLabel labelListaAmigos;
    private javax.swing.JPanel panelAmigos;
    private javax.swing.JScrollPane scrolPanelAmigos;
    private javax.swing.JLabel textoNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
