


import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author pace_
 */
public class Conversacion extends javax.swing.JFrame {
    private String nombreAmigo;
    private ClienteGUI cliente;
    private Usuario usuario;
    ItemMensaje o;
    ItemMensaje mensaje ;
    int cont = 0;
    int contw = 0;
    /**
     * Creates new form Conversacion
     * @param amigo
     * @param cliente
     */
    public Conversacion(String amigo,ClienteGUI cliente) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.labelAmigoCaht.setText(amigo);
        this.nombreAmigo = amigo;
        this.cliente = cliente;
        this.usuario = this.cliente.getUser();
        //Se obtienen las entrasdas y salidas del hilo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelAmigoCaht = new javax.swing.JLabel();
        textoMensaje = new javax.swing.JTextField();
        botonEnviar = new javax.swing.JButton();
        panelMensajes = new javax.swing.JPanel();
        Salir = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Chat con:");

        labelAmigoCaht.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelAmigoCaht.setText("Nombre Amigo");

        textoMensaje.setText("Escriba su mensaje Aqui");
        textoMensaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textoMensajeMouseClicked(evt);
            }
        });

        botonEnviar.setText("Enviar");
        botonEnviar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                botonEnviarMouseMoved(evt);
            }
        });
        botonEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonEnviarMouseClicked(evt);
            }
        });
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });

        panelMensajes.setBackground(new java.awt.Color(255, 255, 255));
        panelMensajes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelMensajes.setAutoscrolls(true);

        javax.swing.GroupLayout panelMensajesLayout = new javax.swing.GroupLayout(panelMensajes);
        panelMensajes.setLayout(panelMensajesLayout);
        panelMensajesLayout.setHorizontalGroup(
            panelMensajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
        );
        panelMensajesLayout.setVerticalGroup(
            panelMensajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelMensajes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelAmigoCaht))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(textoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonEnviar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Salir)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelAmigoCaht))
                .addGap(18, 18, 18)
                .addComponent(panelMensajes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEnviar)
                    .addComponent(Salir))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoMensajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoMensajeMouseClicked
        textoMensaje.setText("");
    }//GEN-LAST:event_textoMensajeMouseClicked

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        // Si el texto de mensaje no esta vacio
        if(!textoMensaje.getText().equals("")){
            System.out.println("Enviando mensaje:"+textoMensaje.getText());
            // Envia el mensaje
            try {
                cliente.getSalida().println( cliente.encriptar("env|"+usuario.getName()+"|"+labelAmigoCaht.getText()+"|"+textoMensaje.getText()) );
                o = new ItemMensaje(textoMensaje.getText());
                o.setBounds(400-(textoMensaje.getText().length()*6), 10+cont, 45+(textoMensaje.getText().length()*6), 35);
            
            this.getPanelMensajes().add(o);
            
            this.getPanelMensajes().repaint();
                 this.setSize(this.getWidth()+1, this.getHeight());
                 this.setSize(this.getWidth()-1, this.getHeight());
            textoMensaje.setText("");
            cont+=36;
            } catch (UnsupportedEncodingException e ) {
                e.printStackTrace();
            }
            
        }

        
    }//GEN-LAST:event_botonEnviarActionPerformed

    private void botonEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEnviarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_botonEnviarMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
         System.out.println("Entra");
        cliente.setVisible(true);
        try {
            cliente.getSalida().println(cliente.encriptar("sa"));
            // TODO add your handling code here:
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Conversacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

   
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void botonEnviarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEnviarMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_botonEnviarMouseMoved

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        
         try {
            cliente.getSalida().println(cliente.encriptar("re"));
            String Aux=cliente.desencriptar(cliente.getEntrada().readLine());
            if(!Aux.equals("NO")  &&  !Aux.equals("vacio")){
                o= new ItemMensaje(Aux);
                o.setBounds(10, 10+cont, 45+(Aux.length()*6), 35);
                this.getPanelMensajes().add(o);
                cont+=26; 
                this.getPanelMensajes().repaint();
                 this.setSize(this.getWidth()+1, this.getHeight());
                 this.setSize(this.getWidth()-1, this.getHeight());
            }
                 
            } catch (IOException ex) {
                Logger.getLogger(ItemAmigo.class.getName()).log(Level.SEVERE, null, ex);
            }

        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         cliente.setVisible(true);
         System.out.println("Entra");
        try {
            cliente.getSalida().println(cliente.encriptar("sa"));
            // TODO add your handling code here:
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Conversacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        
        this.setVisible(false);
        cliente.setVisible(true);

        try {
            cliente.getSalida().println(cliente.encriptar("sa"));
            // TODO add your handling code here:
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Conversacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirActionPerformed

    /**
     * @param args the command line arguments
     */

    public String getNombreAmigo() {
        return nombreAmigo;
    }

    public void setNombreAmigo(String nombreAmigo) {
        this.nombreAmigo = nombreAmigo;
    }

    public ClienteGUI getCliente() {
        return cliente;
    }

    public void setCliente(ClienteGUI cliente) {
        this.cliente = cliente;
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    public JButton getBotonEnviar() {
        return botonEnviar;
    }

    public void setBotonEnviar(JButton botonEnviar) {
        this.botonEnviar = botonEnviar;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getLabelAmigoCaht() {
        return labelAmigoCaht;
    }

    public void setLabelAmigoCaht(JLabel labelAmigoCaht) {
        this.labelAmigoCaht = labelAmigoCaht;
    }

    public JPanel getPanelMensajes() {
        return this.panelMensajes;
    }

    
    public JTextField getTextoMensaje() {
        return textoMensaje;
    }

    /**
     * @param args the command line arguments
     */
    public void setTextoMensaje(JTextField textoMensaje) {
        this.textoMensaje = textoMensaje;
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Salir;
    private javax.swing.JButton botonEnviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelAmigoCaht;
    private javax.swing.JPanel panelMensajes;
    private javax.swing.JTextField textoMensaje;
    // End of variables declaration//GEN-END:variables
}
